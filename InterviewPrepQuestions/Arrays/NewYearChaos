using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution
{
    // Complete the minimumBribes function below.
    static void minimumBribes(int[] q)
    {
        int swaps = 0;
        int spot = 0;
        int temp = 0;
        int[] init = new int[q.Length];

        for (int i = 0; i < q.Length; i++)
        {
            init[i] = i + 1;
        }

        for (int i = 0; i < q.Length; i++)
        {
            spot = q[i] - (i + 1);
            if (spot > 2)
            {
                Console.WriteLine("Too chaotic");
                return;
            }
        }

        for (int i = 0; i < q.Length; i++)
        {
            int x = 1;
            while (init[i] != q[i])
            {
                temp = init[i];
                init[i] = init[i + x];
                init[i + x] = temp;
                x++;
                swaps++;
            }
        }

        Console.WriteLine(swaps);
    }

    static void Main(string[] args)
    {
        int t = Convert.ToInt32(Console.ReadLine());

        for (int tItr = 0; tItr < t; tItr++)
        {
            int n = Convert.ToInt32(Console.ReadLine());

            int[] q = Array.ConvertAll(Console.ReadLine().Split(' '), qTemp => Convert.ToInt32(qTemp));

            minimumBribes(q);
        }
    }
}
